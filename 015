import { Injectable } from '@angular/core';
import {
  CanActivate,
  Router,
  ActivatedRouteSnapshot,
  RouterStateSnapshot
} from '@angular/router';
import { CURRENT_USER } from '../const';
import { AuthService } from './auth.service';
import { AppInfo } from './app-info.service';
import { Observable } from 'rxjs';
import { map, take } from 'rxjs/operators';

@Injectable()
export class AuthGuardService implements CanActivate {

  constructor(private authService: AuthService,
    private router: Router,
    public appInfo: AppInfo) { }

  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {
    // console.log('AuthGuard#canActivate called');
    const url: string = state.url;
    return this.checkLogin(url);
  }

  checkLogin(url: string): Observable<boolean> | boolean {

    if (localStorage.getItem(CURRENT_USER)) {
      return this.authService.authorization()
        .pipe(
          take(1),
          map(isAuthenticated => {
            if (isAuthenticated) {
              return true;
            }
            this.router.navigate(['/login/'], {queryParams: {'goto': encodeURI(url)}});
            return false;
          })
        );

    } else {
      this.router.navigate(['/login/'], {queryParams: {'goto': encodeURI(url)}});
      return false;
    }

  }
}
